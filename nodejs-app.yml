---

- hosts: "*application"
  become: true
  vars:
    nodejs_app_user: nodesvc
    nodejs_app_repo: https://github.com/mpetrive-rh/nodejs-wisdom.git
    nodejs_app_name: nodejs-wisdom
    nodejs_db_target: "{{ groups[app_name+'_database'][0] }}"
    nodejs_lb_target: "{{ groups[app_name+'_loadbalance'][0] if app_name+'_loadbalance' in groups else inventory_hostname}}"
  tasks:
  - name: create service user for application
    user:
      name: "{{ nodejs_app_user }}"
      state: present

  - name: ensure git is installed
    yum:
      name: git
      state: installed

  - name: block for application user
    block:
    - name: deploy application
      git:
        repo: "{{ nodejs_app_repo }}"
        dest: "/home/{{ nodejs_app_user }}/{{ nodejs_app_name }}"
        force: yes

    - name: ensure application config directory exists
      file:
        state: directory
        path: "/home/{{ nodejs_app_user }}/nodejs-config"

    - name: ensure all mongodb facts are available
      setup:
      delegate_to: "{{ nodejs_db_target }}"
      delegate_facts: true
      become: false

    - name: template application configuration file
      template:
        src: config.js.j2
        dest: "/home/{{ nodejs_app_user }}/nodejs-config/appConfig.js"
      vars:
        app_nodejs_dbhost: "{{ hostvars[nodejs_db_target].ansible_all_ipv4_addresses[-1] }}"
        # listen on all addresses
        app_nodejs_listen_addr: 0.0.0.0

    - name: template configuration file
      template:
        src: swagger.js.j2
        dest: "/home/{{ nodejs_app_user }}/nodejs-config/swagger.js"
      vars:
        # TODO replace with another ec2 inventory var/tag. Default ony has public IP in ansible_host
        app_nodejs_swagger_host: "{{ hostvars[nodejs_lb_target]['ansible_host'] }}"

    become_user: "{{ nodejs_app_user }}"

  - name: deploy systemd service script
    template:
      src: "{{ nodejs_app_name }}.service.j2"
      dest: /etc/systemd/system/nodejs-wisdom.service
      mode: 0755

  - name: enable service
    service:
      name: "{{ nodejs_app_name }}"
      state: restarted
      enabled: true
