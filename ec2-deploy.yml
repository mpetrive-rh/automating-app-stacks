- hosts: all
  connection: local
  vars_files:
  - vars/ec2_data.yml
  vars:
    ec2_instance_type: linux
    # work around macos python isssues
    ansible_python_interpreter: "{{ other_python_interpreter | default('/usr/bin/python') }}"
  tasks:

  - name: Restart an EC2 {{ec2_instance_type}} instance
    ec2_instance:
      name: "{{inventory_hostname}}"
      key_name: ec2_key1
      ec2_access_key: "{{ec2_access_key}}"
      ec2_secret_key: "{{ec2_secret_key}}"
      region: "{{ec2_region}}"
      vpc_subnet_id: "{{vpc_subnet_id}}"
      security_group: "{{security_group}}"
      state: stopped
    when: ec2_reset | default(false) | bool

  # issue with botocore and or boto3 libraries
  - name: gather facts about an AMI using ami-id
    ec2_ami_facts:
      ec2_access_key: "{{ec2_access_key}}"
      ec2_secret_key: "{{ec2_secret_key}}"
      image_ids: "{{ami_type[ec2_instance_type]}}"
      region: "{{ec2_region}}"
    register: ami_facts

  # start an instance and have it begin a Tower callback on boot
  - name: Create an EC2 {{ec2_instance_type}} instance
    ec2_instance:
      name: "{{inventory_hostname}}"
      key_name: ec2_key1
      ec2_access_key: "{{ec2_access_key}}"
      ec2_secret_key: "{{ec2_secret_key}}"
      region: "{{ec2_region}}"
      vpc_subnet_id: "{{vpc_subnet_id}}"
      security_group: "{{security_group}}"
      network:
        assign_public_ip: true
      instance_type: "{{instance_type}}"
      image_id: "{{ ami_type[ec2_instance_type] }}"
      #cpu_credit_specification: unlimited
      tags:
        platform: "{{ec2_instance_type}}"
      state: present
    register: provision

  - debug:
      msg: "EC2 instance {{inventory_hostname}} has instance id {{provision.instances[0].instance_id}}"

  - name: set location
    set_fact:
      ansible_host: "{{provision.instances[0].public_ip_address}}"
      ansible_ssh_private_key_file: "{{ec2_key_file}}"
      ansible_user: ec2-user

  - name: ensure key directory
    file:
      path: .keys
      state: directory
      mode: 0700

  - name: ensure private key file is available
    copy:
      dest: .keys/ec2_key1.pem
      content: "{{ec2_private_key}}"
      mode: 0600

- name: ensure deployment and ssh connectivity
  hosts: all
  gather_facts: no
  tasks:
  - name: wait for SSHD or WINRM to become available
    wait_for_connection:

  - name: gather facts
    setup:
